/*********************************	TABELLE DEL DATABASE NEGOZIO_SOFTWARE	*********************************************/

DROP TABLE MODALITA_PAGAMENTO;
DROP TABLE COMPATIBILITA_SO;
DROP TABLE RDS_VEND;
DROP TABLE RIMBORSO;
DROP TABLE RDS_ART;
DROP TABLE CONTIENE;
DROP TABLE WISHLIST;
DROP TABLE LICENZA_ARTICOLO;
DROP TABLE ORDINE;
DROP TABLE HA;
DROP TABLE OFFERTA;
DROP TABLE POSSIEDE;
DROP TABLE PUBBLICITA;
DROP TABLE INSERITO;
DROP TABLE CONTATTI_PUBBLICITARI;
DROP TABLE CONTATTI_ASSISTENZA;
DROP TABLE PRODOTTO_SOFTWARE;
DROP TABLE CATEGORIA_SOFTWARE;
DROP TABLE AZIENDA_PROPRIETARIA;
DROP TABLE RECENSIONE;
DROP TABLE DATA_ASSISTENZA;
DROP TABLE RICHIESTA_DI_SUPPORTO;
DROP TABLE GRUPPO_ASSISTENZA;
DROP TABLE VENDITORE;
DROP TABLE CLIENTE;
DROP TABLE ACCOUNT;

--Creazione di ACCOUNT
CREATE TABLE ACCOUNT(
Email VARCHAR2(20) PRIMARY KEY,
Pwd VARCHAR2(20) NOT NULL,
Nome VARCHAR2(20) NOT NULL,
Cognome VARCHAR2(20) NOT NULL,
Cell VARCHAR2(12) NOT NULL,
Cap CHAR(5),
Citta VARCHAR2(10),
Via VARCHAR2(30),
Stato VARCHAR2(20),
C_V CHAR(1) NOT NULL,
DATA_NASCITA DATE NOT NULL,
CONSTRAINT CHECK_CV CHECK (C_V IN ('C','V')),
CONSTRAINT CHECK_LUNPWD CHECK (LENGTH(Pwd)>= 8)
);


--Creazione di CLIENTE
CREATE TABLE CLIENTE(
Tipologia_cliente VARCHAR2(8)  DEFAULT 'Standard' NOT NULL,
PF1_emcliente VARCHAR2(20) PRIMARY KEY,
CONSTRAINT CHECK_tipologiacliente CHECK (Tipologia_cliente IN ('Standard','Premium')),
CONSTRAINT CHECKF_PF1EMCLIENTE FOREIGN KEY (PF1_emcliente) REFERENCES ACCOUNT(Email) 
ON DELETE CASCADE
);


--Creazione di VENDITORE
CREATE TABLE VENDITORE(
Iban VARCHAR2(34),
Nome_azienda VARCHAR2(20) NOT NULL,
P_iva VARCHAR2(20) NOT NULL,
Tipologia_venditore VARCHAR2(8) DEFAULT 'Standard' NOT NULL,
PF1_emvend VARCHAR2(20) PRIMARY KEY,
CONSTRAINT CHECK_tipologiavenditore CHECK (Tipologia_venditore IN ('Standard','Professionale')),
CONSTRAINT CHECK_PF1EMVEND FOREIGN KEY (PF1_emvend) REFERENCES ACCOUNT(Email)  ON DELETE CASCADE
);


--Creazione di GRUPPO_ASSISTENZA
CREATE TABLE GRUPPO_ASSISTENZA(
Nome_gruppo VARCHAR2(20) PRIMARY KEY,
CATEGORIA VARCHAR2(15) NOT NULL,
N_dipendenti VARCHAR2(20) NOT NULL,
CONSTRAINT CHECK_categoria CHECK (CATEGORIA IN('Informazioni','Pagamenti','Tecnica')),
CONSTRAINT CHECK_ndipendenti CHECK (N_dipendenti >2)
);


--Creazione di DATA_ASSISTENZA
CREATE TABLE DATA_ASSISTENZA(
DATAASS_APERTURA DATE,
DATAASS_CHIUSURA DATE,
f1_nomegruppo varchar2(20) NOT NULL,
CONSTRAINT CHECK_PK_DATA_ASSISTENZA PRIMARY KEY (Data_apertura,Data_chiusura),
CONSTRAINT CHECK_F1nomegruppo FOREIGN KEY(f1_nomegruppo) REFERENCES GRUPPO_ASSISTENZA(Nome_gruppo)  ON DELETE CASCADE,
CONSTRAINT CHECK_date CHECK (Data_apertura < Data_chiusura)
);


--Creazione di RICHIESTA_DI_SUPPORTO
CREATE TABLE RICHIESTA_DI_SUPPORTO(
N_Richiesta VARCHAR2(10) PRIMARY KEY,
CATEGORIA_PROBLEMA VARCHAR2(15) NOT NULL,
Data_creazione DATE DEFAULT SYSDATE NOT NULL,
F2_NOMEGRUPPO VARCHAR2(20) NULL,
V_A CHAR(1) NOT NULL,
CONSTRAINT CHECK_categoria_problema CHECK (CATEGORIA_problema IN('Informazioni','Pagamenti','Tecnica')),
CONSTRAINT CHECK_F2nomegruppo FOREIGN KEY (F2_nomegruppo) REFERENCES GRUPPO_ASSISTENZA(Nome_gruppo) ON DELETE SET NULL
);


--Creazione di RECENSIONE
CREATE TABLE RECENSIONE(
N_Recensione CHAR(10),
N_stelle NUMBER(1,0) NOT NULL,
Data_recensione DATE DEFAULT SYSDATE NOT NULL,
PF2_emcliente VARCHAR2(20),
PF2_emvend VARCHAR2(20) NOT NULL,
Titolo_recensione VARCHAR2(30) NOT NULL,
CONSTRAINT CHECK_stelle CHECK (N_STELLE BETWEEN 1 AND 5),
CONSTRAINT CHECK_PF2emcliente FOREIGN KEY (PF2_emcliente) REFERENCES CLIENTE(PF1_emcliente) ON DELETE CASCADE,
CONSTRAINT CHECK_PF2emvend FOREIGN KEY (PF2_emvend) REFERENCES VENDITORE(PF1_emvend) ON DELETE CASCADE,
CONSTRAINT CHECK_PK_RECENSIONE PRIMARY KEY(N_Recensione,PF2_emcliente)
);


--Creazione di Azienda_proprietaria
CREATE TABLE AZIENDA_PROPRIETARIA(
Nome_azienda VARCHAR2(30) PRIMARY KEY,
Settore_azienda VARCHAR2(20) NOT NULL,
Sito_web_azienda VARCHAR2(30),
Sede_principale VARCHAR2(20) NOT NULL
);


--Creazione di CATEGORIA_SOFTWARE
CREATE TABLE CATEGORIA_SOFTWARE(
Nome_categoria VARCHAR2(20) PRIMARY KEY,
Stato_categoria CHAR(3) DEFAULT 'ON' NOT NULL,
ALTER TABLE CATEGORIA_SOFTWARE ADD CONSTRAINT CHECK_Statocategoria CHECK (Stato_categoria IN('ON','OFF'))
);


--Creazione di PRODOTTO_SOFTWARE
CREATE TABLE PRODOTTO_SOFTWARE(
Nome_software VARCHAR2(20),
Versione_software VARCHAR2(20) DEFAULT 'Vers1',
Lingua CHAR(3) DEFAULT 'Ita' NOT NULL,
Dimensione_file NUMBER NOT NULL,
Prezzo_prodotto NUMBER DEFAULT 0  NOT NULL,
Piu18 CHAR(1) DEFAULT 'N' NOT NULL,
Data_di_uscita DATE NOT NULL,
PF1_nomeaz varchar(30),
F1_nomecat varchar(20),
CONSTRAINT CHECK_PK_PRODOTTO_SOFTWARE PRIMARY KEY (Nome_software,Versione_software,PF1_nomeaz),
CONSTRAINT CHECK_PF1nomeaz FOREIGN KEY (PF1_nomeaz) REFERENCES AZIENDA_PROPRIETARIA(Nome_azienda) ON DELETE CASCADE,
CONSTRAINT CHECK_F1nomecat FOREIGN KEY (F1_nomecat) REFERENCES CATEGORIA_SOFTWARE(Nome_categoria),
CONSTRAINT CHECK_PIU18 CHECK (PIU18 IN ('S','N')),
CONSTRAINT CHECK_Prezzoprodotto CHECK (Prezzo_prodotto >= 0),
CONSTRAINT CHECK_Dimensionefile CHECK (Dimensione_file > 0)
);


--Creazione di CATALOGO
CREATE TABLE CATALOGO(
Nome_catalogo VARCHAR2(20),
Lingua_catalogo CHAR(3) DEFAULT 'Ita' NOT NULL,
Mese VARCHAR2(10) DEFAULT to_char(sysdate,'Month'),
CONSTRAINT CHECK_PK_CATALOGO PRIMARY KEY (Nome_catalogo,Mese),
CONSTRAINT CHECK_MESE CHECK (MESE IN('Gennaio','Febbraio','Marzo','Aprile','Maggio','Giugno','Luglio','Agosto','Settembre','Ottobre','Novembre','Dicembre'))
);


--Creazione di CONTATTI_ASSISTENZA
CREATE TABLE CONTATTI_ASSISTENZA(
Email_ass VARCHAR2(20) NOT NULL,
Tel_ass VARCHAR2(20) NOT NULL,
F1_nomecata VARCHAR2(20) NOT NULL,
F1_mese VARCHAR2(10) NOT NULL,
CONSTRAINT CHECK_F1nomecata FOREIGN KEY (F1_nomecata,f1_mese) REFERENCES CATALOGO(Nome_catalogo,mese) ON DELETE CASCADE
);

--Creazione di CONTATTI_PUBBLICITARI
CREATE TABLE CONTATTI_PUBBLICITARI(
Email_pubbl VARCHAR2(20) NOT NULL,
Tel_pubbl VARCHAR2(20) NOT NULL,
F2_nomecata VARCHAR2(20) NOT NULL,
F2_mese VARCHAR2(10) NOT NULL,
CONSTRAINT CHECK_F2nomecata FOREIGN KEY (F2_nomecata,f2_mese) REFERENCES CATALOGO(Nome_catalogo,mese) ON DELETE CASCADE
);


--Creazione di INSERITO
CREATE TABLE INSERITO(
PF4_nsoft VARCHAR2(20),
PF4_vsoft VARCHAR2(20),
F3_nomecata VARCHAR2(20),
PF1_Mese VARCHAR2(10) DEFAULT to_char(sysdate,'Month'),
F4_nomeaz VARCHAR2(30),
CONSTRAINT CHECK_PK_INSERITO PRIMARY KEY (PF4_nsoft,PF4_vsoft,F3_nomecata,F4_nomeaz,PF1_mese),
CONSTRAINT CHECK_FKnomesoftcat FOREIGN KEY (PF4_nsoft,PF4_vsoft,F4_nomeaz) REFERENCES PRODOTTO_SOFTWARE (Nome_software,Versione_software,PF1_nomeaz) 
ON DELETE CASCADE
);


--Creazione di PUBBLICITA
CREATE TABLE PUBBLICITA(
Nome_prodotto VARCHAR2(20) PRIMARY KEY,
Url_pubblicita VARCHAR2(20),
Priorita_pubblicita NUMBER(1,0) DEFAULT 0,
Azienda_pubblicizzante VARCHAR2(20) NOT NULL,
CONSTRAINT CHECK_Prioritapubblicita CHECK (Priorita_pubblicita >= 0) 
);


--Creazione di POSSIEDE
CREATE TABLE POSSIEDE(
PF1_nomecat VARCHAR2(20),
PF1_nomeprodotto VARCHAR2(20),
pf2_mese Varchar2(10),
CONSTRAINT CHECK_PK_POSSIEDE PRIMARY KEY (PF1_nomecat,pf2_mese,PF1_nomeprodotto),
CONSTRAINT CHECK_FK_nome_cat2 FOREIGN KEY (PF1_nomecat,pf2_mese) REFERENCES CATALOGO(Nome_catalogo,mese) ON DELETE CASCADE,
CONSTRAINT CHECK_FK_nome_prod FOREIGN KEY (PF1_nomeprodotto) REFERENCES PUBBLICITA (Nome_prodotto) ON DELETE CASCADE
);

--Creazione di OFFERTA
CREATE TABLE OFFERTA(
Id_offerta VARCHAR2(20) PRIMARY KEY,
Percentuale_sconto NUMBER NOT NULL,
Inizio_offerta DATE DEFAULT SYSDATE NOT NULL,
Fine_offerta DATE NOT NULL,
CONSTRAINT CHECK_Percentualesconto CHECK (Percentuale_sconto > 0),
CONSTRAINT CHECK_Dateofferta CHECK (Inizio_offerta < Fine_offerta)
);


--Creazione di HA
CREATE TABLE HA(
PF2_nsoft VARCHAR2(20),
PF2_vsoft VARCHAR2(20),
PF1_idofferta VARCHAR2(20),
PF2_nomeaz VARCHAR2(30),
CONSTRAINT CHECK_PK_HA PRIMARY KEY (PF2_nsoft,PF1_idofferta,PF2_vsoft,PF2_nomeaz),
CONSTRAINT CHECK_FKNome_prod_off FOREIGN KEY (PF2_nsoft,PF2_vsoft,PF2_nomeaz) REFERENCES PRODOTTO_SOFTWARE (Nome_software, Versione_software,PF1_nomeaz) ON DELETE CASCADE,
CONSTRAINT CHECK_FK_Id_offert FOREIGN KEY (PF1_idofferta) REFERENCES OFFERTA(Id_offerta) ON DELETE CASCADE
);


--Creazione di ORDINE
CREATE TABLE ORDINE(
Cod_ord CHAR(10) PRIMARY KEY,
Mod_pagamento_scelto CHAR(10),
Totale_ordine NUMBER,
Data_ordine DATE,
F2_emcliente VARCHAR2(20),
CONSTRAINT CHECK_PK_ORDINE FOREIGN KEY (F2_emcliente) REFERENCES CLIENTE(PF1_emcliente) ON DELETE CASCADE,
CONSTRAINT CHECK_Totaleordine CHECK (Totale_ordine >= 0)
);


--Creazione di LICENZA_ARTICOLO
CREATE TABLE LICENZA_ARTICOLO(
Cod_licenza CHAR(10),
Durata_licenza DATE,
Garanzia_prodotto NUMBER(2,0),
Tipo_licenza VARCHAR2(11) NOT NULL,
Prezzo_licenza NUMBER NOT NULL,
F2_emvend VARCHAR2(20),
PF5_nsoft VARCHAR2(20),
PF5_vsoft VARCHAR2(20),
F1_codord char(10),
PF3_nomeaz varchar2(30),
CONSTRAINT CHECK_PK_LICENZA_ARTICOLO PRIMARY KEY (PF5_nsoft,PF5_vsoft,Cod_licenza,PF3_nomeaz),
CONSTRAINT CHECK_F2emvend FOREIGN KEY (F2_emvend) REFERENCES VENDITORE(PF1_emvend) ON DELETE CASCADE,
CONSTRAINT CHECK_F1_cordord FOREIGN KEY (F1_cordord) REFERENCES ORDINE(Cod_ord) ON DELETE SET NULL,
CONSTRAINT CHECK_FKNsoft FOREIGN KEY (PF5_nsoft,PF5_vsoft,PF3_nomeaz) REFERENCES PRODOTTO_SOFTWARE (Nome_software, Versione_software,PF1_nomeaz) ON DELETE CASCADE,
CONSTRAINT CHECK_Tipolicenza CHECK (Tipo_licenza IN ('Freeware', 'Demo', 'Shareware', 'Adware', 'Commerciale')),
CONSTRAINT CHECK_Prezzolicenza CHECK (Prezzo_licenza >= 0)
);


--Creazione di WISHLIST
CREATE TABLE WISHLIST(
Nome_wishlist VARCHAR2(20),
Tipo_wishlist VARCHAR(14) NOT NULL,
Privacy VARCHAR2(8) NOT NULL,
PF3_emcliente VARCHAR2(20),
CONSTRAINT CHECK_PK_WISHLIST PRIMARY KEY (Nome_wishlist,PF3_emcliente),
CONSTRAINT CHECK_FK_PF3emcliente FOREIGN KEY (PF3_emcliente) REFERENCES CLIENTE(PF1_emcliente) ON DELETE CASCADE,
CONSTRAINT CHECK_Tipowishlist CHECK (Tipo_wishlist IN ('ListaDesideri','ListaPreferita','ListaIdee')),
CONSTRAINT CHECK_Privacy CHECK (Privacy IN ('Privata','Pubblica'))
);


--Creazione di CONTIENE
CREATE TABLE CONTIENE(
PF1_nsoft VARCHAR2(20),
PF1_vsoft VARCHAR2(20),
PF1_nomewish VARCHAR2(20),
F3_nomeaz varchar2(30),
F1_emclwish varchar2(20),
CONSTRAINT PK_Contiene PRIMARY KEY (PF1_nsoft,PF1_vsoft ,PF1_nomewish,F1_emclwish,F3_nomeaz),
CONSTRAINT FK_Nome_prod_wish FOREIGN KEY (PF1_nsoft,PF1_vsoft,F3_nomeaz) REFERENCES PRODOTTO_SOFTWARE(Nome_software,Versione_software,pf1_nomeaz) ON DELETE CASCADE,
CONSTRAINT FK_N_wish FOREIGN KEY (PF1_nomewish,F1_emclwish) REFERENCES WISHLIST(Nome_wishlist,PF3_EMCLIENTE) ON DELETE CASCADE
);


--Creazione di RDS_ART
CREATE TABLE RDS_ART(
PF1_licart VARCHAR2(20) PRIMARY KEY,
Tipol_prob_acquir VARCHAR2(20) NOT NULL,
Lic_art char(10),
F1_nsoft varchar2(20),
F1_vsoft varchar2(20),
F3_nomeaz varchar2(30),
CONSTRAINT CHECK_PF1_licart FOREIGN KEY (PF1_licart) REFERENCES RICHIESTA_DI_SUPPORTO(N_RICHIESTA) ON DELETE CASCADE,
CONSTRAINT CHECK_FK_Ric_licart FOREIGN KEY (Lic_art,F1_nsoft,F1_vsoft,F3_nomeaz) REFERENCES LICENZA_ARTICOLO(Cod_licenza,PF5_nsoft,PF5_vsoft,PF3_nomeaz) ON DELETE CASCADE
);


--Creazione di RIMBORSO
CREATE TABLE RIMBORSO(
Data_rimborso DATE DEFAULT SYSDATE PRIMARY KEY,
Totale_rimborso NUMBER NOT NULL,
Esito_rimborso CHAR(8) NOT NULL,
F1_licart varchar2(20) NOT NULL UNIQUE,
CONSTRAINT CHECK_F1licart FOREIGN KEY (F1_licart) REFERENCES RDS_ART(PF1_licart) ON DELETE CASCADE,
CONSTRAINT CHECK_Totale_rimborso CHECK (Totale_rimborso > 0)
);


--Creazione di RDS_VEND
CREATE TABLE RDS_VEND(
PF1_vend VARCHAR2(20) PRIMARY KEY,
Tipol_prob_vend VARCHAR2(20) NOT NULL,
F1_emvend varchar2(20),
CONSTRAINT CHECK_F1emvend  FOREIGN KEY (F1_emvend) REFERENCES VENDITORE(PF1_emvend) ON DELETE CASCADE,
CONSTRAINT FK_PF1vend FOREIGN KEY (PF1_vend) REFERENCES RICHIESTA_DI_SUPPORTO(N_richiesta) ON DELETE CASCADE
);


--Creazione di COMPATIBILITA_SO
CREATE TABLE COMPATIBILITA_SO(
PF3_nsoft VARCHAR2(20),
PF3_vsoft VARCHAR2(20),
compatibilita varchar2(20),
F5_nomeaz VARCHAR2(30),
CONSTRAINT CHECK_PK_COMPATIBILITA PRIMARY KEY(PF3_nsoft,PF3_vsoft,compatibilita,F5_nomeaz),
CONSTRAINT CHECK_FK_COMPATIBILITA FOREIGN KEY (PF3_nsoft,PF3_vsoft,F5_nomeaz) REFERENCES PRODOTTO_SOFTWARE(Nome_software,Versione_software,PF1_nomeaz) ON DELETE CASCADE,
CONSTRAINT CHECK_Compatibilita CHECK (Compatibilita IN('Windows','MacOS','Linux'))
);


--Creazione di MODALITA_PAGAMENTO
CREATE TABLE MODALITA_PAGAMENTO(
F1_emclie VARCHAR2(20) NOT NULL,
Mod_pagamento CHAR(10) PRIMARY KEY,
CONSTRAINT CHECK_F1emclie FOREIGN KEY (F1_emclie) REFERENCES CLIENTE(PF1_emcliente) ON DELETE CASCADE
);


--Visualizzazione delle tabelle inserite
select table_name from user_tables;